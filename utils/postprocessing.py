from decimal import Decimal
from numpy import int64, int32, float64, clip


def rounding(original_data, data, dtypes, to_integers=True):
    """
    :param original_data: original dataset
    :param data: dataset generated by generator
    :param dtypes: dict with types of columns
    :param to_integers: default True, if True, rounding will be performed for categorical variables
    :return: processed dataset
    """
    for key, dtype in dtypes.items():
        if dtype in [int64, int32]:
            data[key] = data[key].round(0).astype('int64')
            if original_data[key].nunique() < 10:
                data[key] = clip(data[key], original_data[key].min(), original_data[key].max())
        elif dtype == float64:
            dec = max([abs(Decimal(str(x)).as_tuple().exponent)
                       for x in original_data[key].sample(10).to_list()])
            data[key] = data[key].round(dec).astype('float64')
        elif dtype == object and to_integers:
            data[key] = data[key].round(0).astype('int64')
    return data
